@model UserPersonalViewModel

<script src="~/lib/jquery-validation/dist/additional-methods.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<form id="PDForm" method="post" asp-action="UpdatePersonalDetails" asp-controller="User">
    @Html.HiddenFor(m => m.UserPersonalDetailID)
    <div class="row">
        <div class="col-sm-6">
            <!--First Name-->
            <div class="form-group">
                <label class="control-label">First Name<strong class="text-danger"> *</strong></label>
                @Html.TextBoxFor(m => m.FirstName, new { @class = "input", @placeholder = "First Name" })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
            <!--/First Name-->
        </div>
        <div class="col-sm-6">
            <!--Last Name-->
            <div class="form-group">
                <label class="control-label">Last Name</label>
                @Html.TextBoxFor(m => m.LastName, new { @class = "input", @placeholder = "Last Name" })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
            <!--/Last Name-->
        </div>
    </div>
    <!--Phone No-->
    <div class="form-group">
        <label class="control-label">Phone No</label>
        @Html.TextBoxFor(m => m.PhoneNo, new { @class = "input", @placeholder = "e.g. 923055513575" })
        @Html.ValidationMessageFor(m => m.PhoneNo, "", new { @class = "text-danger" })
    </div>
    <!--/Phone No-->
    <!--Phone No-->
    <div class="form-group">
        <label class="control-label">Email</label>
        @Html.TextBoxFor(m => m.Email, new { @class = "input", @disabled = "true" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div>
    <!--/Phone No-->
    <div class="row">
        <div class="col-xs-6">
            <div class="form-group">
                <label asp-for="DOB" class="control-label"></label><strong class="text-danger"> *</strong>
                <input asp-for="DOB" class="form-control" />
                <span asp-validation-for="DOB" class="text-danger"></span>
            </div>
        </div>
        <div class="col-xs-6">
            <label asp-for="Gender" class="control-label"></label><strong class="text-danger"> *</strong>
            <div class="form-group">
                <label class="radio-inline">
                    <input type="radio" asp-for="Gender" value="0" checked> Male
                </label>
                <label class="radio-inline">
                    <input type="radio" asp-for="Gender" value="1"> Female
                </label>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <!--Country-->
            <div class="form-group">
                <label class="control-label">Country<strong class="text-danger"> *</strong></label>
                @if (ViewBag.CountryList != null)
                {
                        @Html.DropDownListFor(model => model.CountryId, ViewBag.CountryList as SelectList, "--Select--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "text-danger" })
                }
            </div>
            <!--/Country-->
        </div>
        <div class="col-sm-6">
            <!--City-->
            <div class="form-group">
                <label class="control-label">City<strong class="text-danger"> *</strong></label>
                @Html.DropDownListFor(m => m.CityId, new SelectList(""), "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CityId, "", new { @class = "text-danger" })
            </div>
            <!--/City-->
        </div>
    </div>

    <div class="form-group">
        <button id="PDSubmit" type="submit" class="main-btn btn-block">
            Update
        </button>
    </div>

    <div class="cent" id="loaderDiv">
        <img src="~/images/load.gif" />
    </div>
</form>

<script>
    $(document).ready(function () {

        //Form Validation
        $('#PDForm').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                FirstName: {
                    validators: {
                        stringLength: {
                            min: 2,
                            max: 50,
                            message: 'First name can contain minimum 2 and maximum 50 letters'
                        },
                        regexp: {
                            regexp: /^[a-z]+$/i,
                            message: 'First Name can contain alphabets only'
                        },
                        notEmpty: {
                            message: 'Please Enter your First name'
                        }
                    }
                },
                LastName: {
                    validators: {
                        stringLength: {
                            min: 2,
                            max: 100,
                            message: 'Last Name can contain minimum 2 characters'
                        },
                        regexp: {
                            regexp: /^[a-z\s]+$/i,
                            message: 'Last Name can contain alphabets only'
                        }
                    }
                },
                PhoneNo: {
                    validators: {
                        numeric: {
                            message: 'The Phone No must be a number.'
                        }
                    }
                },
                DOB: {
                    validators: {
                        notEmpty: {
                            message: 'Date of Birth is required'
                        }
                    }
                },
                CountryId: {
                    validators: {
                        notEmpty: {
                            message: 'Country Name is required'
                        }
                    }
                },
                CityId: {
                    validators: {
                        notEmpty: {
                            message: 'City Name is required'
                        }
                    }
                },

            }
        });

        //Submit Form
        $("#PDSubmit").click(function () {
            var validator = $('#PDForm').data('bootstrapValidator');
            validator.validate();
             $('#PDForm').bootstrapValidator('validate');
             if (validator.isValid()) {
            $("#loaderDiv").show();
            var pDFormData = $("#PDForm").serialize();
            console.log(pDFormData);

            $.ajax({
                type: "POST",
                url: "/User/updatepersonaldetails",
                data: pDFormData,
                success: function (response) {

                }
            })

            }//If IsValid

        });//PDSubmit Button Ends


        //For DIsplaying Cities List
        $("#CountryId").change(function () {
            var countryId = $(this).val();

            $.ajax({
                type: "POST",
                url: "/User/GetCitiesList?CountryId=" + countryId,
                contentType: "html",
                success: function (response) {

                    $("#CityId").empty();
                    $("#CityId").append(response);

                }
            })//Ajax Ends
        })//Display City List Ends

    })//Document Ready Ends
</script>
